/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutSessionsIndexImport } from './routes/_layout/sessions/index'
import { Route as LayoutDocsIndexImport } from './routes/_layout/docs/index'
import { Route as LayoutSessionsSessionIdImport } from './routes/_layout/sessions/$sessionId'
import { Route as LayoutProjectsLayoutProjectsImport } from './routes/_layout/projects/_layout-projects'
import { Route as LayoutModelsLayoutModelsImport } from './routes/_layout/models/_layout-models'
import { Route as LayoutDataLayoutDatasourcesImport } from './routes/_layout/data/_layout-datasources'
import { Route as LayoutChatsLayoutChatsImport } from './routes/_layout/chats/_layout-chats'
import { Route as LayoutAnalyticsLayoutAnalyticsImport } from './routes/_layout/analytics/_layout-analytics'
import { Route as LayoutSettingsLayoutSettingsIndexImport } from './routes/_layout/settings/_layout-settings/index'
import { Route as LayoutProjectsLayoutProjectsIndexImport } from './routes/_layout/projects/_layout-projects/index'
import { Route as LayoutModelsLayoutModelsIndexImport } from './routes/_layout/models/_layout-models/index'
import { Route as LayoutDataLayoutDatasourcesIndexImport } from './routes/_layout/data/_layout-datasources/index'
import { Route as LayoutChatsLayoutChatsIndexImport } from './routes/_layout/chats/_layout-chats/index'
import { Route as LayoutAnalyticsLayoutAnalyticsIndexImport } from './routes/_layout/analytics/_layout-analytics/index'
import { Route as LayoutProjectsLayoutProjectsProjectIdImport } from './routes/_layout/projects/_layout-projects/$projectId'
import { Route as LayoutDataLayoutDatasourcesDataSourceIdImport } from './routes/_layout/data/_layout-datasources/$dataSourceId'
import { Route as LayoutChatsLayoutChatsSessionIdImport } from './routes/_layout/chats/_layout-chats/$sessionId'
import { Route as LayoutChatsLayoutChatsProjectsProjectIdIndexImport } from './routes/_layout/chats/_layout-chats/projects/$projectId/index'
import { Route as LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexImport } from './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/index'
import { Route as LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdImport } from './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId'

// Create Virtual Routes

const LayoutProjectsImport = createFileRoute('/_layout/projects')()
const LayoutModelsImport = createFileRoute('/_layout/models')()
const LayoutDataImport = createFileRoute('/_layout/data')()
const LayoutChatsImport = createFileRoute('/_layout/chats')()
const LayoutAnalyticsImport = createFileRoute('/_layout/analytics')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_layout.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutProjectsRoute = LayoutProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutModelsRoute = LayoutModelsImport.update({
  id: '/models',
  path: '/models',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDataRoute = LayoutDataImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutChatsRoute = LayoutChatsImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAnalyticsRoute = LayoutAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSessionsIndexRoute = LayoutSessionsIndexImport.update({
  id: '/sessions/',
  path: '/sessions/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDocsIndexRoute = LayoutDocsIndexImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSessionsSessionIdRoute = LayoutSessionsSessionIdImport.update({
  id: '/sessions/$sessionId',
  path: '/sessions/$sessionId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsLayoutProjectsRoute =
  LayoutProjectsLayoutProjectsImport.update({
    id: '/_layout-projects',
    getParentRoute: () => LayoutProjectsRoute,
  } as any)

const LayoutModelsLayoutModelsRoute = LayoutModelsLayoutModelsImport.update({
  id: '/_layout-models',
  getParentRoute: () => LayoutModelsRoute,
} as any)

const LayoutDataLayoutDatasourcesRoute =
  LayoutDataLayoutDatasourcesImport.update({
    id: '/_layout-datasources',
    getParentRoute: () => LayoutDataRoute,
  } as any)

const LayoutChatsLayoutChatsRoute = LayoutChatsLayoutChatsImport.update({
  id: '/_layout-chats',
  getParentRoute: () => LayoutChatsRoute,
} as any)

const LayoutAnalyticsLayoutAnalyticsRoute =
  LayoutAnalyticsLayoutAnalyticsImport.update({
    id: '/_layout-analytics',
    getParentRoute: () => LayoutAnalyticsRoute,
  } as any)

const LayoutSettingsLayoutSettingsIndexRoute =
  LayoutSettingsLayoutSettingsIndexImport.update({
    id: '/settings/_layout-settings/',
    path: '/settings/',
    getParentRoute: () => LayoutRoute,
  } as any).lazy(() =>
    import('./routes/_layout/settings/_layout-settings/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutProjectsLayoutProjectsIndexRoute =
  LayoutProjectsLayoutProjectsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutProjectsLayoutProjectsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/projects/_layout-projects/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutModelsLayoutModelsIndexRoute =
  LayoutModelsLayoutModelsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutModelsLayoutModelsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/models/_layout-models/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutDataLayoutDatasourcesIndexRoute =
  LayoutDataLayoutDatasourcesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutDataLayoutDatasourcesRoute,
  } as any).lazy(() =>
    import('./routes/_layout/data/_layout-datasources/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutChatsLayoutChatsIndexRoute =
  LayoutChatsLayoutChatsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/chats/_layout-chats/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutAnalyticsLayoutAnalyticsIndexRoute =
  LayoutAnalyticsLayoutAnalyticsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutAnalyticsLayoutAnalyticsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/analytics/_layout-analytics/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutProjectsLayoutProjectsProjectIdRoute =
  LayoutProjectsLayoutProjectsProjectIdImport.update({
    id: '/$projectId',
    path: '/$projectId',
    getParentRoute: () => LayoutProjectsLayoutProjectsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/projects/_layout-projects/$projectId.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutDataLayoutDatasourcesDataSourceIdRoute =
  LayoutDataLayoutDatasourcesDataSourceIdImport.update({
    id: '/$dataSourceId',
    path: '/$dataSourceId',
    getParentRoute: () => LayoutDataLayoutDatasourcesRoute,
  } as any).lazy(() =>
    import('./routes/_layout/data/_layout-datasources/$dataSourceId.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutChatsLayoutChatsSessionIdRoute =
  LayoutChatsLayoutChatsSessionIdImport.update({
    id: '/$sessionId',
    path: '/$sessionId',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/chats/_layout-chats/$sessionId.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutChatsLayoutChatsProjectsProjectIdIndexRoute =
  LayoutChatsLayoutChatsProjectsProjectIdIndexImport.update({
    id: '/projects/$projectId/',
    path: '/projects/$projectId/',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import(
      './routes/_layout/chats/_layout-chats/projects/$projectId/index.lazy'
    ).then((d) => d.Route),
  )

const LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute =
  LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexImport.update({
    id: '/projects/$projectId/sessions/',
    path: '/projects/$projectId/sessions/',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import(
      './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/index.lazy'
    ).then((d) => d.Route),
  )

const LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute =
  LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdImport.update({
    id: '/projects/$projectId/sessions/$sessionId',
    path: '/projects/$projectId/sessions/$sessionId',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import(
      './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/analytics': {
      id: '/_layout/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof LayoutAnalyticsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/analytics/_layout-analytics': {
      id: '/_layout/analytics/_layout-analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof LayoutAnalyticsLayoutAnalyticsImport
      parentRoute: typeof LayoutAnalyticsRoute
    }
    '/_layout/chats': {
      id: '/_layout/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof LayoutChatsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/chats/_layout-chats': {
      id: '/_layout/chats/_layout-chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof LayoutChatsLayoutChatsImport
      parentRoute: typeof LayoutChatsRoute
    }
    '/_layout/data': {
      id: '/_layout/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof LayoutDataImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/data/_layout-datasources': {
      id: '/_layout/data/_layout-datasources'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesImport
      parentRoute: typeof LayoutDataRoute
    }
    '/_layout/models': {
      id: '/_layout/models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof LayoutModelsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/models/_layout-models': {
      id: '/_layout/models/_layout-models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof LayoutModelsLayoutModelsImport
      parentRoute: typeof LayoutModelsRoute
    }
    '/_layout/projects': {
      id: '/_layout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/_layout-projects': {
      id: '/_layout/projects/_layout-projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsLayoutProjectsImport
      parentRoute: typeof LayoutProjectsRoute
    }
    '/_layout/sessions/$sessionId': {
      id: '/_layout/sessions/$sessionId'
      path: '/sessions/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof LayoutSessionsSessionIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/docs/': {
      id: '/_layout/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof LayoutDocsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/sessions/': {
      id: '/_layout/sessions/'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof LayoutSessionsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/chats/_layout-chats/$sessionId': {
      id: '/_layout/chats/_layout-chats/$sessionId'
      path: '/$sessionId'
      fullPath: '/chats/$sessionId'
      preLoaderRoute: typeof LayoutChatsLayoutChatsSessionIdImport
      parentRoute: typeof LayoutChatsLayoutChatsImport
    }
    '/_layout/data/_layout-datasources/$dataSourceId': {
      id: '/_layout/data/_layout-datasources/$dataSourceId'
      path: '/$dataSourceId'
      fullPath: '/data/$dataSourceId'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesDataSourceIdImport
      parentRoute: typeof LayoutDataLayoutDatasourcesImport
    }
    '/_layout/projects/_layout-projects/$projectId': {
      id: '/_layout/projects/_layout-projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof LayoutProjectsLayoutProjectsProjectIdImport
      parentRoute: typeof LayoutProjectsLayoutProjectsImport
    }
    '/_layout/analytics/_layout-analytics/': {
      id: '/_layout/analytics/_layout-analytics/'
      path: '/'
      fullPath: '/analytics/'
      preLoaderRoute: typeof LayoutAnalyticsLayoutAnalyticsIndexImport
      parentRoute: typeof LayoutAnalyticsLayoutAnalyticsImport
    }
    '/_layout/chats/_layout-chats/': {
      id: '/_layout/chats/_layout-chats/'
      path: '/'
      fullPath: '/chats/'
      preLoaderRoute: typeof LayoutChatsLayoutChatsIndexImport
      parentRoute: typeof LayoutChatsLayoutChatsImport
    }
    '/_layout/data/_layout-datasources/': {
      id: '/_layout/data/_layout-datasources/'
      path: '/'
      fullPath: '/data/'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesIndexImport
      parentRoute: typeof LayoutDataLayoutDatasourcesImport
    }
    '/_layout/models/_layout-models/': {
      id: '/_layout/models/_layout-models/'
      path: '/'
      fullPath: '/models/'
      preLoaderRoute: typeof LayoutModelsLayoutModelsIndexImport
      parentRoute: typeof LayoutModelsLayoutModelsImport
    }
    '/_layout/projects/_layout-projects/': {
      id: '/_layout/projects/_layout-projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof LayoutProjectsLayoutProjectsIndexImport
      parentRoute: typeof LayoutProjectsLayoutProjectsImport
    }
    '/_layout/settings/_layout-settings/': {
      id: '/_layout/settings/_layout-settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsLayoutSettingsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/chats/_layout-chats/projects/$projectId/': {
      id: '/_layout/chats/_layout-chats/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/chats/projects/$projectId'
      preLoaderRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdIndexImport
      parentRoute: typeof LayoutChatsLayoutChatsImport
    }
    '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId': {
      id: '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId'
      path: '/projects/$projectId/sessions/$sessionId'
      fullPath: '/chats/projects/$projectId/sessions/$sessionId'
      preLoaderRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdImport
      parentRoute: typeof LayoutChatsLayoutChatsImport
    }
    '/_layout/chats/_layout-chats/projects/$projectId/sessions/': {
      id: '/_layout/chats/_layout-chats/projects/$projectId/sessions/'
      path: '/projects/$projectId/sessions'
      fullPath: '/chats/projects/$projectId/sessions'
      preLoaderRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexImport
      parentRoute: typeof LayoutChatsLayoutChatsImport
    }
  }
}

// Create and export the route tree

interface LayoutAnalyticsLayoutAnalyticsRouteChildren {
  LayoutAnalyticsLayoutAnalyticsIndexRoute: typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
}

const LayoutAnalyticsLayoutAnalyticsRouteChildren: LayoutAnalyticsLayoutAnalyticsRouteChildren =
  {
    LayoutAnalyticsLayoutAnalyticsIndexRoute:
      LayoutAnalyticsLayoutAnalyticsIndexRoute,
  }

const LayoutAnalyticsLayoutAnalyticsRouteWithChildren =
  LayoutAnalyticsLayoutAnalyticsRoute._addFileChildren(
    LayoutAnalyticsLayoutAnalyticsRouteChildren,
  )

interface LayoutAnalyticsRouteChildren {
  LayoutAnalyticsLayoutAnalyticsRoute: typeof LayoutAnalyticsLayoutAnalyticsRouteWithChildren
}

const LayoutAnalyticsRouteChildren: LayoutAnalyticsRouteChildren = {
  LayoutAnalyticsLayoutAnalyticsRoute:
    LayoutAnalyticsLayoutAnalyticsRouteWithChildren,
}

const LayoutAnalyticsRouteWithChildren = LayoutAnalyticsRoute._addFileChildren(
  LayoutAnalyticsRouteChildren,
)

interface LayoutChatsLayoutChatsRouteChildren {
  LayoutChatsLayoutChatsSessionIdRoute: typeof LayoutChatsLayoutChatsSessionIdRoute
  LayoutChatsLayoutChatsIndexRoute: typeof LayoutChatsLayoutChatsIndexRoute
  LayoutChatsLayoutChatsProjectsProjectIdIndexRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}

const LayoutChatsLayoutChatsRouteChildren: LayoutChatsLayoutChatsRouteChildren =
  {
    LayoutChatsLayoutChatsSessionIdRoute: LayoutChatsLayoutChatsSessionIdRoute,
    LayoutChatsLayoutChatsIndexRoute: LayoutChatsLayoutChatsIndexRoute,
    LayoutChatsLayoutChatsProjectsProjectIdIndexRoute:
      LayoutChatsLayoutChatsProjectsProjectIdIndexRoute,
    LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute:
      LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute,
    LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute:
      LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute,
  }

const LayoutChatsLayoutChatsRouteWithChildren =
  LayoutChatsLayoutChatsRoute._addFileChildren(
    LayoutChatsLayoutChatsRouteChildren,
  )

interface LayoutChatsRouteChildren {
  LayoutChatsLayoutChatsRoute: typeof LayoutChatsLayoutChatsRouteWithChildren
}

const LayoutChatsRouteChildren: LayoutChatsRouteChildren = {
  LayoutChatsLayoutChatsRoute: LayoutChatsLayoutChatsRouteWithChildren,
}

const LayoutChatsRouteWithChildren = LayoutChatsRoute._addFileChildren(
  LayoutChatsRouteChildren,
)

interface LayoutDataLayoutDatasourcesRouteChildren {
  LayoutDataLayoutDatasourcesDataSourceIdRoute: typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  LayoutDataLayoutDatasourcesIndexRoute: typeof LayoutDataLayoutDatasourcesIndexRoute
}

const LayoutDataLayoutDatasourcesRouteChildren: LayoutDataLayoutDatasourcesRouteChildren =
  {
    LayoutDataLayoutDatasourcesDataSourceIdRoute:
      LayoutDataLayoutDatasourcesDataSourceIdRoute,
    LayoutDataLayoutDatasourcesIndexRoute:
      LayoutDataLayoutDatasourcesIndexRoute,
  }

const LayoutDataLayoutDatasourcesRouteWithChildren =
  LayoutDataLayoutDatasourcesRoute._addFileChildren(
    LayoutDataLayoutDatasourcesRouteChildren,
  )

interface LayoutDataRouteChildren {
  LayoutDataLayoutDatasourcesRoute: typeof LayoutDataLayoutDatasourcesRouteWithChildren
}

const LayoutDataRouteChildren: LayoutDataRouteChildren = {
  LayoutDataLayoutDatasourcesRoute:
    LayoutDataLayoutDatasourcesRouteWithChildren,
}

const LayoutDataRouteWithChildren = LayoutDataRoute._addFileChildren(
  LayoutDataRouteChildren,
)

interface LayoutModelsLayoutModelsRouteChildren {
  LayoutModelsLayoutModelsIndexRoute: typeof LayoutModelsLayoutModelsIndexRoute
}

const LayoutModelsLayoutModelsRouteChildren: LayoutModelsLayoutModelsRouteChildren =
  {
    LayoutModelsLayoutModelsIndexRoute: LayoutModelsLayoutModelsIndexRoute,
  }

const LayoutModelsLayoutModelsRouteWithChildren =
  LayoutModelsLayoutModelsRoute._addFileChildren(
    LayoutModelsLayoutModelsRouteChildren,
  )

interface LayoutModelsRouteChildren {
  LayoutModelsLayoutModelsRoute: typeof LayoutModelsLayoutModelsRouteWithChildren
}

const LayoutModelsRouteChildren: LayoutModelsRouteChildren = {
  LayoutModelsLayoutModelsRoute: LayoutModelsLayoutModelsRouteWithChildren,
}

const LayoutModelsRouteWithChildren = LayoutModelsRoute._addFileChildren(
  LayoutModelsRouteChildren,
)

interface LayoutProjectsLayoutProjectsRouteChildren {
  LayoutProjectsLayoutProjectsProjectIdRoute: typeof LayoutProjectsLayoutProjectsProjectIdRoute
  LayoutProjectsLayoutProjectsIndexRoute: typeof LayoutProjectsLayoutProjectsIndexRoute
}

const LayoutProjectsLayoutProjectsRouteChildren: LayoutProjectsLayoutProjectsRouteChildren =
  {
    LayoutProjectsLayoutProjectsProjectIdRoute:
      LayoutProjectsLayoutProjectsProjectIdRoute,
    LayoutProjectsLayoutProjectsIndexRoute:
      LayoutProjectsLayoutProjectsIndexRoute,
  }

const LayoutProjectsLayoutProjectsRouteWithChildren =
  LayoutProjectsLayoutProjectsRoute._addFileChildren(
    LayoutProjectsLayoutProjectsRouteChildren,
  )

interface LayoutProjectsRouteChildren {
  LayoutProjectsLayoutProjectsRoute: typeof LayoutProjectsLayoutProjectsRouteWithChildren
}

const LayoutProjectsRouteChildren: LayoutProjectsRouteChildren = {
  LayoutProjectsLayoutProjectsRoute:
    LayoutProjectsLayoutProjectsRouteWithChildren,
}

const LayoutProjectsRouteWithChildren = LayoutProjectsRoute._addFileChildren(
  LayoutProjectsRouteChildren,
)

interface LayoutRouteChildren {
  LayoutAnalyticsRoute: typeof LayoutAnalyticsRouteWithChildren
  LayoutChatsRoute: typeof LayoutChatsRouteWithChildren
  LayoutDataRoute: typeof LayoutDataRouteWithChildren
  LayoutModelsRoute: typeof LayoutModelsRouteWithChildren
  LayoutProjectsRoute: typeof LayoutProjectsRouteWithChildren
  LayoutSessionsSessionIdRoute: typeof LayoutSessionsSessionIdRoute
  LayoutDocsIndexRoute: typeof LayoutDocsIndexRoute
  LayoutSessionsIndexRoute: typeof LayoutSessionsIndexRoute
  LayoutSettingsLayoutSettingsIndexRoute: typeof LayoutSettingsLayoutSettingsIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAnalyticsRoute: LayoutAnalyticsRouteWithChildren,
  LayoutChatsRoute: LayoutChatsRouteWithChildren,
  LayoutDataRoute: LayoutDataRouteWithChildren,
  LayoutModelsRoute: LayoutModelsRouteWithChildren,
  LayoutProjectsRoute: LayoutProjectsRouteWithChildren,
  LayoutSessionsSessionIdRoute: LayoutSessionsSessionIdRoute,
  LayoutDocsIndexRoute: LayoutDocsIndexRoute,
  LayoutSessionsIndexRoute: LayoutSessionsIndexRoute,
  LayoutSettingsLayoutSettingsIndexRoute:
    LayoutSettingsLayoutSettingsIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/analytics': typeof LayoutAnalyticsLayoutAnalyticsRouteWithChildren
  '/chats': typeof LayoutChatsLayoutChatsRouteWithChildren
  '/data': typeof LayoutDataLayoutDatasourcesRouteWithChildren
  '/models': typeof LayoutModelsLayoutModelsRouteWithChildren
  '/projects': typeof LayoutProjectsLayoutProjectsRouteWithChildren
  '/sessions/$sessionId': typeof LayoutSessionsSessionIdRoute
  '/docs': typeof LayoutDocsIndexRoute
  '/sessions': typeof LayoutSessionsIndexRoute
  '/chats/$sessionId': typeof LayoutChatsLayoutChatsSessionIdRoute
  '/data/$dataSourceId': typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  '/projects/$projectId': typeof LayoutProjectsLayoutProjectsProjectIdRoute
  '/analytics/': typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
  '/chats/': typeof LayoutChatsLayoutChatsIndexRoute
  '/data/': typeof LayoutDataLayoutDatasourcesIndexRoute
  '/models/': typeof LayoutModelsLayoutModelsIndexRoute
  '/projects/': typeof LayoutProjectsLayoutProjectsIndexRoute
  '/settings': typeof LayoutSettingsLayoutSettingsIndexRoute
  '/chats/projects/$projectId': typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  '/chats/projects/$projectId/sessions/$sessionId': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  '/chats/projects/$projectId/sessions': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/analytics': typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
  '/chats': typeof LayoutChatsLayoutChatsIndexRoute
  '/data': typeof LayoutDataLayoutDatasourcesIndexRoute
  '/models': typeof LayoutModelsLayoutModelsIndexRoute
  '/projects': typeof LayoutProjectsLayoutProjectsIndexRoute
  '/sessions/$sessionId': typeof LayoutSessionsSessionIdRoute
  '/docs': typeof LayoutDocsIndexRoute
  '/sessions': typeof LayoutSessionsIndexRoute
  '/chats/$sessionId': typeof LayoutChatsLayoutChatsSessionIdRoute
  '/data/$dataSourceId': typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  '/projects/$projectId': typeof LayoutProjectsLayoutProjectsProjectIdRoute
  '/settings': typeof LayoutSettingsLayoutSettingsIndexRoute
  '/chats/projects/$projectId': typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  '/chats/projects/$projectId/sessions/$sessionId': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  '/chats/projects/$projectId/sessions': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/analytics': typeof LayoutAnalyticsRouteWithChildren
  '/_layout/analytics/_layout-analytics': typeof LayoutAnalyticsLayoutAnalyticsRouteWithChildren
  '/_layout/chats': typeof LayoutChatsRouteWithChildren
  '/_layout/chats/_layout-chats': typeof LayoutChatsLayoutChatsRouteWithChildren
  '/_layout/data': typeof LayoutDataRouteWithChildren
  '/_layout/data/_layout-datasources': typeof LayoutDataLayoutDatasourcesRouteWithChildren
  '/_layout/models': typeof LayoutModelsRouteWithChildren
  '/_layout/models/_layout-models': typeof LayoutModelsLayoutModelsRouteWithChildren
  '/_layout/projects': typeof LayoutProjectsRouteWithChildren
  '/_layout/projects/_layout-projects': typeof LayoutProjectsLayoutProjectsRouteWithChildren
  '/_layout/sessions/$sessionId': typeof LayoutSessionsSessionIdRoute
  '/_layout/docs/': typeof LayoutDocsIndexRoute
  '/_layout/sessions/': typeof LayoutSessionsIndexRoute
  '/_layout/chats/_layout-chats/$sessionId': typeof LayoutChatsLayoutChatsSessionIdRoute
  '/_layout/data/_layout-datasources/$dataSourceId': typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  '/_layout/projects/_layout-projects/$projectId': typeof LayoutProjectsLayoutProjectsProjectIdRoute
  '/_layout/analytics/_layout-analytics/': typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
  '/_layout/chats/_layout-chats/': typeof LayoutChatsLayoutChatsIndexRoute
  '/_layout/data/_layout-datasources/': typeof LayoutDataLayoutDatasourcesIndexRoute
  '/_layout/models/_layout-models/': typeof LayoutModelsLayoutModelsIndexRoute
  '/_layout/projects/_layout-projects/': typeof LayoutProjectsLayoutProjectsIndexRoute
  '/_layout/settings/_layout-settings/': typeof LayoutSettingsLayoutSettingsIndexRoute
  '/_layout/chats/_layout-chats/projects/$projectId/': typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  '/_layout/chats/_layout-chats/projects/$projectId/sessions/': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/analytics'
    | '/chats'
    | '/data'
    | '/models'
    | '/projects'
    | '/sessions/$sessionId'
    | '/docs'
    | '/sessions'
    | '/chats/$sessionId'
    | '/data/$dataSourceId'
    | '/projects/$projectId'
    | '/analytics/'
    | '/chats/'
    | '/data/'
    | '/models/'
    | '/projects/'
    | '/settings'
    | '/chats/projects/$projectId'
    | '/chats/projects/$projectId/sessions/$sessionId'
    | '/chats/projects/$projectId/sessions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/analytics'
    | '/chats'
    | '/data'
    | '/models'
    | '/projects'
    | '/sessions/$sessionId'
    | '/docs'
    | '/sessions'
    | '/chats/$sessionId'
    | '/data/$dataSourceId'
    | '/projects/$projectId'
    | '/settings'
    | '/chats/projects/$projectId'
    | '/chats/projects/$projectId/sessions/$sessionId'
    | '/chats/projects/$projectId/sessions'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/analytics'
    | '/_layout/analytics/_layout-analytics'
    | '/_layout/chats'
    | '/_layout/chats/_layout-chats'
    | '/_layout/data'
    | '/_layout/data/_layout-datasources'
    | '/_layout/models'
    | '/_layout/models/_layout-models'
    | '/_layout/projects'
    | '/_layout/projects/_layout-projects'
    | '/_layout/sessions/$sessionId'
    | '/_layout/docs/'
    | '/_layout/sessions/'
    | '/_layout/chats/_layout-chats/$sessionId'
    | '/_layout/data/_layout-datasources/$dataSourceId'
    | '/_layout/projects/_layout-projects/$projectId'
    | '/_layout/analytics/_layout-analytics/'
    | '/_layout/chats/_layout-chats/'
    | '/_layout/data/_layout-datasources/'
    | '/_layout/models/_layout-models/'
    | '/_layout/projects/_layout-projects/'
    | '/_layout/settings/_layout-settings/'
    | '/_layout/chats/_layout-chats/projects/$projectId/'
    | '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId'
    | '/_layout/chats/_layout-chats/projects/$projectId/sessions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/analytics",
        "/_layout/chats",
        "/_layout/data",
        "/_layout/models",
        "/_layout/projects",
        "/_layout/sessions/$sessionId",
        "/_layout/docs/",
        "/_layout/sessions/",
        "/_layout/settings/_layout-settings/"
      ]
    },
    "/_layout/analytics": {
      "filePath": "_layout/analytics",
      "parent": "/_layout",
      "children": [
        "/_layout/analytics/_layout-analytics"
      ]
    },
    "/_layout/analytics/_layout-analytics": {
      "filePath": "_layout/analytics/_layout-analytics.tsx",
      "parent": "/_layout/analytics",
      "children": [
        "/_layout/analytics/_layout-analytics/"
      ]
    },
    "/_layout/chats": {
      "filePath": "_layout/chats",
      "parent": "/_layout",
      "children": [
        "/_layout/chats/_layout-chats"
      ]
    },
    "/_layout/chats/_layout-chats": {
      "filePath": "_layout/chats/_layout-chats.tsx",
      "parent": "/_layout/chats",
      "children": [
        "/_layout/chats/_layout-chats/$sessionId",
        "/_layout/chats/_layout-chats/",
        "/_layout/chats/_layout-chats/projects/$projectId/",
        "/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId",
        "/_layout/chats/_layout-chats/projects/$projectId/sessions/"
      ]
    },
    "/_layout/data": {
      "filePath": "_layout/data",
      "parent": "/_layout",
      "children": [
        "/_layout/data/_layout-datasources"
      ]
    },
    "/_layout/data/_layout-datasources": {
      "filePath": "_layout/data/_layout-datasources.tsx",
      "parent": "/_layout/data",
      "children": [
        "/_layout/data/_layout-datasources/$dataSourceId",
        "/_layout/data/_layout-datasources/"
      ]
    },
    "/_layout/models": {
      "filePath": "_layout/models",
      "parent": "/_layout",
      "children": [
        "/_layout/models/_layout-models"
      ]
    },
    "/_layout/models/_layout-models": {
      "filePath": "_layout/models/_layout-models.tsx",
      "parent": "/_layout/models",
      "children": [
        "/_layout/models/_layout-models/"
      ]
    },
    "/_layout/projects": {
      "filePath": "_layout/projects",
      "parent": "/_layout",
      "children": [
        "/_layout/projects/_layout-projects"
      ]
    },
    "/_layout/projects/_layout-projects": {
      "filePath": "_layout/projects/_layout-projects.tsx",
      "parent": "/_layout/projects",
      "children": [
        "/_layout/projects/_layout-projects/$projectId",
        "/_layout/projects/_layout-projects/"
      ]
    },
    "/_layout/sessions/$sessionId": {
      "filePath": "_layout/sessions/$sessionId.tsx",
      "parent": "/_layout"
    },
    "/_layout/docs/": {
      "filePath": "_layout/docs/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/sessions/": {
      "filePath": "_layout/sessions/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/chats/_layout-chats/$sessionId": {
      "filePath": "_layout/chats/_layout-chats/$sessionId.tsx",
      "parent": "/_layout/chats/_layout-chats"
    },
    "/_layout/data/_layout-datasources/$dataSourceId": {
      "filePath": "_layout/data/_layout-datasources/$dataSourceId.tsx",
      "parent": "/_layout/data/_layout-datasources"
    },
    "/_layout/projects/_layout-projects/$projectId": {
      "filePath": "_layout/projects/_layout-projects/$projectId.tsx",
      "parent": "/_layout/projects/_layout-projects"
    },
    "/_layout/analytics/_layout-analytics/": {
      "filePath": "_layout/analytics/_layout-analytics/index.tsx",
      "parent": "/_layout/analytics/_layout-analytics"
    },
    "/_layout/chats/_layout-chats/": {
      "filePath": "_layout/chats/_layout-chats/index.tsx",
      "parent": "/_layout/chats/_layout-chats"
    },
    "/_layout/data/_layout-datasources/": {
      "filePath": "_layout/data/_layout-datasources/index.tsx",
      "parent": "/_layout/data/_layout-datasources"
    },
    "/_layout/models/_layout-models/": {
      "filePath": "_layout/models/_layout-models/index.tsx",
      "parent": "/_layout/models/_layout-models"
    },
    "/_layout/projects/_layout-projects/": {
      "filePath": "_layout/projects/_layout-projects/index.tsx",
      "parent": "/_layout/projects/_layout-projects"
    },
    "/_layout/settings/_layout-settings/": {
      "filePath": "_layout/settings/_layout-settings/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/chats/_layout-chats/projects/$projectId/": {
      "filePath": "_layout/chats/_layout-chats/projects/$projectId/index.tsx",
      "parent": "/_layout/chats/_layout-chats"
    },
    "/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId": {
      "filePath": "_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId.tsx",
      "parent": "/_layout/chats/_layout-chats"
    },
    "/_layout/chats/_layout-chats/projects/$projectId/sessions/": {
      "filePath": "_layout/chats/_layout-chats/projects/$projectId/sessions/index.tsx",
      "parent": "/_layout/chats/_layout-chats"
    }
  }
}
ROUTE_MANIFEST_END */
