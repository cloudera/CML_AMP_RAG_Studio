AWS_DEFAULT_REGION=us-west-2

# H2 or PostgreSQL (RDS) (H2 is default)
DB_TYPE=H2

# H2
DB_URL=jdbc:h2:../databases/rag

# RDS
# DB_URL= "jdbc:postgresql://<host>:<port>/<database>"
DB_USERNAME=
DB_PASSWORD=

# Model Provider
MODEL_PROVIDER=Bedrock

# CAII
CAII_DOMAIN=

# Azure OpenAI
AZURE_OPENAI_API_KEY=
AZURE_OPENAI_ENDPOINT=
OPENAI_API_VERSION=

# QDRANT or OPENSEARCH or CHROMADB or PGVECTOR
VECTOR_DB_PROVIDER=QDRANT

# OpenSearch
OPENSEARCH_ENDPOINT=
OPENSEARCH_USERNAME=
OPENSEARCH_PASSWORD=
OPENSEARCH_NAMESPACE=

# ChromaDB
CHROMADB_HOST=http://localhost
CHROMADB_PORT=8000
CHROMADB_TOKEN=
# Tenant and database defaults to the Chroma default values
CHROMADB_TENANT=
CHROMADB_DATABASE=
# If CHROMADB_HOST starts with "https://" and your server uses a private CA,
# set it to the path of your PEM bundle so Python can verify TLS connections to ChromaDB:
CHROMADB_SERVER_SSL_CERT_PATH=/absolute/path/to/ca-bundle.pem
CHROMADB_ENABLE_ANONYMIZED_TELEMETRY=false

# PGVector
PGVECTOR_HOST=localhost
PGVECTOR_PORT=5432
PGVECTOR_DB=postgres
PGVECTOR_USER=postgres
PGVECTOR_PASSWORD=postgres

# AWS
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# S3
S3_RAG_BUCKET_PREFIX=
S3_RAG_DOCUMENT_BUCKET=

# Local or S3
SUMMARY_STORAGE_PROVIDER=
CHAT_STORE_PROVIDER=

# set this to true if you have uv installed on your system, other wise don't include this
USE_SYSTEM_UV=true

# set this to true to enable enhanced pdf processing with docling
USE_ENHANCED_PDF_PROCESSING=false

# override for project CDP_TOKEN
CDP_TOKEN_OVERRIDE=

# set this to enable the use of opik for observability
ENABLE_OPIK=
OPIK_URL=