/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutSessionsIndexRouteImport } from './routes/_layout/sessions/index'
import { Route as LayoutDocsIndexRouteImport } from './routes/_layout/docs/index'
import { Route as LayoutSessionsSessionIdRouteImport } from './routes/_layout/sessions/$sessionId'
import { Route as LayoutProjectsLayoutProjectsRouteImport } from './routes/_layout/projects/_layout-projects'
import { Route as LayoutModelsLayoutModelsRouteImport } from './routes/_layout/models/_layout-models'
import { Route as LayoutDataLayoutDatasourcesRouteImport } from './routes/_layout/data/_layout-datasources'
import { Route as LayoutChatsLayoutChatsRouteImport } from './routes/_layout/chats/_layout-chats'
import { Route as LayoutAnalyticsLayoutAnalyticsRouteImport } from './routes/_layout/analytics/_layout-analytics'
import { Route as LayoutSettingsLayoutSettingsIndexRouteImport } from './routes/_layout/settings/_layout-settings/index'
import { Route as LayoutProjectsLayoutProjectsIndexRouteImport } from './routes/_layout/projects/_layout-projects/index'
import { Route as LayoutModelsLayoutModelsIndexRouteImport } from './routes/_layout/models/_layout-models/index'
import { Route as LayoutDataLayoutDatasourcesIndexRouteImport } from './routes/_layout/data/_layout-datasources/index'
import { Route as LayoutChatsLayoutChatsIndexRouteImport } from './routes/_layout/chats/_layout-chats/index'
import { Route as LayoutAnalyticsLayoutAnalyticsIndexRouteImport } from './routes/_layout/analytics/_layout-analytics/index'
import { Route as LayoutProjectsLayoutProjectsProjectIdRouteImport } from './routes/_layout/projects/_layout-projects/$projectId'
import { Route as LayoutDataLayoutDatasourcesDataSourceIdRouteImport } from './routes/_layout/data/_layout-datasources/$dataSourceId'
import { Route as LayoutChatsLayoutChatsSessionIdRouteImport } from './routes/_layout/chats/_layout-chats/$sessionId'
import { Route as LayoutChatsLayoutChatsProjectsProjectIdIndexRouteImport } from './routes/_layout/chats/_layout-chats/projects/$projectId/index'
import { Route as LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRouteImport } from './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/index'
import { Route as LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRouteImport } from './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId'

const LayoutProjectsRouteImport = createFileRoute('/_layout/projects')()
const LayoutModelsRouteImport = createFileRoute('/_layout/models')()
const LayoutDataRouteImport = createFileRoute('/_layout/data')()
const LayoutChatsRouteImport = createFileRoute('/_layout/chats')()
const LayoutAnalyticsRouteImport = createFileRoute('/_layout/analytics')()

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/_layout.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const LayoutProjectsRoute = LayoutProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutModelsRoute = LayoutModelsRouteImport.update({
  id: '/models',
  path: '/models',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDataRoute = LayoutDataRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutChatsRoute = LayoutChatsRouteImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAnalyticsRoute = LayoutAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSessionsIndexRoute = LayoutSessionsIndexRouteImport.update({
  id: '/sessions/',
  path: '/sessions/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDocsIndexRoute = LayoutDocsIndexRouteImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSessionsSessionIdRoute = LayoutSessionsSessionIdRouteImport.update({
  id: '/sessions/$sessionId',
  path: '/sessions/$sessionId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProjectsLayoutProjectsRoute =
  LayoutProjectsLayoutProjectsRouteImport.update({
    id: '/_layout-projects',
    getParentRoute: () => LayoutProjectsRoute,
  } as any)
const LayoutModelsLayoutModelsRoute =
  LayoutModelsLayoutModelsRouteImport.update({
    id: '/_layout-models',
    getParentRoute: () => LayoutModelsRoute,
  } as any)
const LayoutDataLayoutDatasourcesRoute =
  LayoutDataLayoutDatasourcesRouteImport.update({
    id: '/_layout-datasources',
    getParentRoute: () => LayoutDataRoute,
  } as any)
const LayoutChatsLayoutChatsRoute = LayoutChatsLayoutChatsRouteImport.update({
  id: '/_layout-chats',
  getParentRoute: () => LayoutChatsRoute,
} as any)
const LayoutAnalyticsLayoutAnalyticsRoute =
  LayoutAnalyticsLayoutAnalyticsRouteImport.update({
    id: '/_layout-analytics',
    getParentRoute: () => LayoutAnalyticsRoute,
  } as any)
const LayoutSettingsLayoutSettingsIndexRoute =
  LayoutSettingsLayoutSettingsIndexRouteImport.update({
    id: '/settings/_layout-settings/',
    path: '/settings/',
    getParentRoute: () => LayoutRoute,
  } as any).lazy(() =>
    import('./routes/_layout/settings/_layout-settings/index.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutProjectsLayoutProjectsIndexRoute =
  LayoutProjectsLayoutProjectsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutProjectsLayoutProjectsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/projects/_layout-projects/index.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutModelsLayoutModelsIndexRoute =
  LayoutModelsLayoutModelsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutModelsLayoutModelsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/models/_layout-models/index.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutDataLayoutDatasourcesIndexRoute =
  LayoutDataLayoutDatasourcesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutDataLayoutDatasourcesRoute,
  } as any).lazy(() =>
    import('./routes/_layout/data/_layout-datasources/index.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutChatsLayoutChatsIndexRoute =
  LayoutChatsLayoutChatsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/chats/_layout-chats/index.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutAnalyticsLayoutAnalyticsIndexRoute =
  LayoutAnalyticsLayoutAnalyticsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutAnalyticsLayoutAnalyticsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/analytics/_layout-analytics/index.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutProjectsLayoutProjectsProjectIdRoute =
  LayoutProjectsLayoutProjectsProjectIdRouteImport.update({
    id: '/$projectId',
    path: '/$projectId',
    getParentRoute: () => LayoutProjectsLayoutProjectsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/projects/_layout-projects/$projectId.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutDataLayoutDatasourcesDataSourceIdRoute =
  LayoutDataLayoutDatasourcesDataSourceIdRouteImport.update({
    id: '/$dataSourceId',
    path: '/$dataSourceId',
    getParentRoute: () => LayoutDataLayoutDatasourcesRoute,
  } as any).lazy(() =>
    import('./routes/_layout/data/_layout-datasources/$dataSourceId.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutChatsLayoutChatsSessionIdRoute =
  LayoutChatsLayoutChatsSessionIdRouteImport.update({
    id: '/$sessionId',
    path: '/$sessionId',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import('./routes/_layout/chats/_layout-chats/$sessionId.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutChatsLayoutChatsProjectsProjectIdIndexRoute =
  LayoutChatsLayoutChatsProjectsProjectIdIndexRouteImport.update({
    id: '/projects/$projectId/',
    path: '/projects/$projectId/',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import(
      './routes/_layout/chats/_layout-chats/projects/$projectId/index.lazy'
    ).then((d) => d.Route),
  )
const LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute =
  LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRouteImport.update({
    id: '/projects/$projectId/sessions/',
    path: '/projects/$projectId/sessions/',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import(
      './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/index.lazy'
    ).then((d) => d.Route),
  )
const LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute =
  LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRouteImport.update({
    id: '/projects/$projectId/sessions/$sessionId',
    path: '/projects/$projectId/sessions/$sessionId',
    getParentRoute: () => LayoutChatsLayoutChatsRoute,
  } as any).lazy(() =>
    import(
      './routes/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId.lazy'
    ).then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof LayoutAnalyticsLayoutAnalyticsRouteWithChildren
  '/chats': typeof LayoutChatsLayoutChatsRouteWithChildren
  '/data': typeof LayoutDataLayoutDatasourcesRouteWithChildren
  '/models': typeof LayoutModelsLayoutModelsRouteWithChildren
  '/projects': typeof LayoutProjectsLayoutProjectsRouteWithChildren
  '/sessions/$sessionId': typeof LayoutSessionsSessionIdRoute
  '/docs': typeof LayoutDocsIndexRoute
  '/sessions': typeof LayoutSessionsIndexRoute
  '/chats/$sessionId': typeof LayoutChatsLayoutChatsSessionIdRoute
  '/data/$dataSourceId': typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  '/projects/$projectId': typeof LayoutProjectsLayoutProjectsProjectIdRoute
  '/analytics/': typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
  '/chats/': typeof LayoutChatsLayoutChatsIndexRoute
  '/data/': typeof LayoutDataLayoutDatasourcesIndexRoute
  '/models/': typeof LayoutModelsLayoutModelsIndexRoute
  '/projects/': typeof LayoutProjectsLayoutProjectsIndexRoute
  '/settings': typeof LayoutSettingsLayoutSettingsIndexRoute
  '/chats/projects/$projectId': typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  '/chats/projects/$projectId/sessions/$sessionId': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  '/chats/projects/$projectId/sessions': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
  '/chats': typeof LayoutChatsLayoutChatsIndexRoute
  '/data': typeof LayoutDataLayoutDatasourcesIndexRoute
  '/models': typeof LayoutModelsLayoutModelsIndexRoute
  '/projects': typeof LayoutProjectsLayoutProjectsIndexRoute
  '/sessions/$sessionId': typeof LayoutSessionsSessionIdRoute
  '/docs': typeof LayoutDocsIndexRoute
  '/sessions': typeof LayoutSessionsIndexRoute
  '/chats/$sessionId': typeof LayoutChatsLayoutChatsSessionIdRoute
  '/data/$dataSourceId': typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  '/projects/$projectId': typeof LayoutProjectsLayoutProjectsProjectIdRoute
  '/settings': typeof LayoutSettingsLayoutSettingsIndexRoute
  '/chats/projects/$projectId': typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  '/chats/projects/$projectId/sessions/$sessionId': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  '/chats/projects/$projectId/sessions': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/analytics': typeof LayoutAnalyticsRouteWithChildren
  '/_layout/analytics/_layout-analytics': typeof LayoutAnalyticsLayoutAnalyticsRouteWithChildren
  '/_layout/chats': typeof LayoutChatsRouteWithChildren
  '/_layout/chats/_layout-chats': typeof LayoutChatsLayoutChatsRouteWithChildren
  '/_layout/data': typeof LayoutDataRouteWithChildren
  '/_layout/data/_layout-datasources': typeof LayoutDataLayoutDatasourcesRouteWithChildren
  '/_layout/models': typeof LayoutModelsRouteWithChildren
  '/_layout/models/_layout-models': typeof LayoutModelsLayoutModelsRouteWithChildren
  '/_layout/projects': typeof LayoutProjectsRouteWithChildren
  '/_layout/projects/_layout-projects': typeof LayoutProjectsLayoutProjectsRouteWithChildren
  '/_layout/sessions/$sessionId': typeof LayoutSessionsSessionIdRoute
  '/_layout/docs/': typeof LayoutDocsIndexRoute
  '/_layout/sessions/': typeof LayoutSessionsIndexRoute
  '/_layout/chats/_layout-chats/$sessionId': typeof LayoutChatsLayoutChatsSessionIdRoute
  '/_layout/data/_layout-datasources/$dataSourceId': typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  '/_layout/projects/_layout-projects/$projectId': typeof LayoutProjectsLayoutProjectsProjectIdRoute
  '/_layout/analytics/_layout-analytics/': typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
  '/_layout/chats/_layout-chats/': typeof LayoutChatsLayoutChatsIndexRoute
  '/_layout/data/_layout-datasources/': typeof LayoutDataLayoutDatasourcesIndexRoute
  '/_layout/models/_layout-models/': typeof LayoutModelsLayoutModelsIndexRoute
  '/_layout/projects/_layout-projects/': typeof LayoutProjectsLayoutProjectsIndexRoute
  '/_layout/settings/_layout-settings/': typeof LayoutSettingsLayoutSettingsIndexRoute
  '/_layout/chats/_layout-chats/projects/$projectId/': typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  '/_layout/chats/_layout-chats/projects/$projectId/sessions/': typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/chats'
    | '/data'
    | '/models'
    | '/projects'
    | '/sessions/$sessionId'
    | '/docs'
    | '/sessions'
    | '/chats/$sessionId'
    | '/data/$dataSourceId'
    | '/projects/$projectId'
    | '/analytics/'
    | '/chats/'
    | '/data/'
    | '/models/'
    | '/projects/'
    | '/settings'
    | '/chats/projects/$projectId'
    | '/chats/projects/$projectId/sessions/$sessionId'
    | '/chats/projects/$projectId/sessions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/chats'
    | '/data'
    | '/models'
    | '/projects'
    | '/sessions/$sessionId'
    | '/docs'
    | '/sessions'
    | '/chats/$sessionId'
    | '/data/$dataSourceId'
    | '/projects/$projectId'
    | '/settings'
    | '/chats/projects/$projectId'
    | '/chats/projects/$projectId/sessions/$sessionId'
    | '/chats/projects/$projectId/sessions'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/analytics'
    | '/_layout/analytics/_layout-analytics'
    | '/_layout/chats'
    | '/_layout/chats/_layout-chats'
    | '/_layout/data'
    | '/_layout/data/_layout-datasources'
    | '/_layout/models'
    | '/_layout/models/_layout-models'
    | '/_layout/projects'
    | '/_layout/projects/_layout-projects'
    | '/_layout/sessions/$sessionId'
    | '/_layout/docs/'
    | '/_layout/sessions/'
    | '/_layout/chats/_layout-chats/$sessionId'
    | '/_layout/data/_layout-datasources/$dataSourceId'
    | '/_layout/projects/_layout-projects/$projectId'
    | '/_layout/analytics/_layout-analytics/'
    | '/_layout/chats/_layout-chats/'
    | '/_layout/data/_layout-datasources/'
    | '/_layout/models/_layout-models/'
    | '/_layout/projects/_layout-projects/'
    | '/_layout/settings/_layout-settings/'
    | '/_layout/chats/_layout-chats/projects/$projectId/'
    | '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId'
    | '/_layout/chats/_layout-chats/projects/$projectId/sessions/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/projects': {
      id: '/_layout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/models': {
      id: '/_layout/models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof LayoutModelsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/data': {
      id: '/_layout/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof LayoutDataRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/chats': {
      id: '/_layout/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof LayoutChatsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/analytics': {
      id: '/_layout/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof LayoutAnalyticsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/sessions/': {
      id: '/_layout/sessions/'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof LayoutSessionsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/docs/': {
      id: '/_layout/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof LayoutDocsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/sessions/$sessionId': {
      id: '/_layout/sessions/$sessionId'
      path: '/sessions/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof LayoutSessionsSessionIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/projects/_layout-projects': {
      id: '/_layout/projects/_layout-projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsLayoutProjectsRouteImport
      parentRoute: typeof LayoutProjectsRoute
    }
    '/_layout/models/_layout-models': {
      id: '/_layout/models/_layout-models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof LayoutModelsLayoutModelsRouteImport
      parentRoute: typeof LayoutModelsRoute
    }
    '/_layout/data/_layout-datasources': {
      id: '/_layout/data/_layout-datasources'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesRouteImport
      parentRoute: typeof LayoutDataRoute
    }
    '/_layout/chats/_layout-chats': {
      id: '/_layout/chats/_layout-chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof LayoutChatsLayoutChatsRouteImport
      parentRoute: typeof LayoutChatsRoute
    }
    '/_layout/analytics/_layout-analytics': {
      id: '/_layout/analytics/_layout-analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof LayoutAnalyticsLayoutAnalyticsRouteImport
      parentRoute: typeof LayoutAnalyticsRoute
    }
    '/_layout/settings/_layout-settings/': {
      id: '/_layout/settings/_layout-settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsLayoutSettingsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/projects/_layout-projects/': {
      id: '/_layout/projects/_layout-projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof LayoutProjectsLayoutProjectsIndexRouteImport
      parentRoute: typeof LayoutProjectsLayoutProjectsRoute
    }
    '/_layout/models/_layout-models/': {
      id: '/_layout/models/_layout-models/'
      path: '/'
      fullPath: '/models/'
      preLoaderRoute: typeof LayoutModelsLayoutModelsIndexRouteImport
      parentRoute: typeof LayoutModelsLayoutModelsRoute
    }
    '/_layout/data/_layout-datasources/': {
      id: '/_layout/data/_layout-datasources/'
      path: '/'
      fullPath: '/data/'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesIndexRouteImport
      parentRoute: typeof LayoutDataLayoutDatasourcesRoute
    }
    '/_layout/chats/_layout-chats/': {
      id: '/_layout/chats/_layout-chats/'
      path: '/'
      fullPath: '/chats/'
      preLoaderRoute: typeof LayoutChatsLayoutChatsIndexRouteImport
      parentRoute: typeof LayoutChatsLayoutChatsRoute
    }
    '/_layout/analytics/_layout-analytics/': {
      id: '/_layout/analytics/_layout-analytics/'
      path: '/'
      fullPath: '/analytics/'
      preLoaderRoute: typeof LayoutAnalyticsLayoutAnalyticsIndexRouteImport
      parentRoute: typeof LayoutAnalyticsLayoutAnalyticsRoute
    }
    '/_layout/projects/_layout-projects/$projectId': {
      id: '/_layout/projects/_layout-projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof LayoutProjectsLayoutProjectsProjectIdRouteImport
      parentRoute: typeof LayoutProjectsLayoutProjectsRoute
    }
    '/_layout/data/_layout-datasources/$dataSourceId': {
      id: '/_layout/data/_layout-datasources/$dataSourceId'
      path: '/$dataSourceId'
      fullPath: '/data/$dataSourceId'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesDataSourceIdRouteImport
      parentRoute: typeof LayoutDataLayoutDatasourcesRoute
    }
    '/_layout/chats/_layout-chats/$sessionId': {
      id: '/_layout/chats/_layout-chats/$sessionId'
      path: '/$sessionId'
      fullPath: '/chats/$sessionId'
      preLoaderRoute: typeof LayoutChatsLayoutChatsSessionIdRouteImport
      parentRoute: typeof LayoutChatsLayoutChatsRoute
    }
    '/_layout/chats/_layout-chats/projects/$projectId/': {
      id: '/_layout/chats/_layout-chats/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/chats/projects/$projectId'
      preLoaderRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRouteImport
      parentRoute: typeof LayoutChatsLayoutChatsRoute
    }
    '/_layout/chats/_layout-chats/projects/$projectId/sessions/': {
      id: '/_layout/chats/_layout-chats/projects/$projectId/sessions/'
      path: '/projects/$projectId/sessions'
      fullPath: '/chats/projects/$projectId/sessions'
      preLoaderRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRouteImport
      parentRoute: typeof LayoutChatsLayoutChatsRoute
    }
    '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId': {
      id: '/_layout/chats/_layout-chats/projects/$projectId/sessions/$sessionId'
      path: '/projects/$projectId/sessions/$sessionId'
      fullPath: '/chats/projects/$projectId/sessions/$sessionId'
      preLoaderRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRouteImport
      parentRoute: typeof LayoutChatsLayoutChatsRoute
    }
  }
}

interface LayoutAnalyticsLayoutAnalyticsRouteChildren {
  LayoutAnalyticsLayoutAnalyticsIndexRoute: typeof LayoutAnalyticsLayoutAnalyticsIndexRoute
}

const LayoutAnalyticsLayoutAnalyticsRouteChildren: LayoutAnalyticsLayoutAnalyticsRouteChildren =
  {
    LayoutAnalyticsLayoutAnalyticsIndexRoute:
      LayoutAnalyticsLayoutAnalyticsIndexRoute,
  }

const LayoutAnalyticsLayoutAnalyticsRouteWithChildren =
  LayoutAnalyticsLayoutAnalyticsRoute._addFileChildren(
    LayoutAnalyticsLayoutAnalyticsRouteChildren,
  )

interface LayoutAnalyticsRouteChildren {
  LayoutAnalyticsLayoutAnalyticsRoute: typeof LayoutAnalyticsLayoutAnalyticsRouteWithChildren
}

const LayoutAnalyticsRouteChildren: LayoutAnalyticsRouteChildren = {
  LayoutAnalyticsLayoutAnalyticsRoute:
    LayoutAnalyticsLayoutAnalyticsRouteWithChildren,
}

const LayoutAnalyticsRouteWithChildren = LayoutAnalyticsRoute._addFileChildren(
  LayoutAnalyticsRouteChildren,
)

interface LayoutChatsLayoutChatsRouteChildren {
  LayoutChatsLayoutChatsSessionIdRoute: typeof LayoutChatsLayoutChatsSessionIdRoute
  LayoutChatsLayoutChatsIndexRoute: typeof LayoutChatsLayoutChatsIndexRoute
  LayoutChatsLayoutChatsProjectsProjectIdIndexRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdIndexRoute
  LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute
  LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute: typeof LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute
}

const LayoutChatsLayoutChatsRouteChildren: LayoutChatsLayoutChatsRouteChildren =
  {
    LayoutChatsLayoutChatsSessionIdRoute: LayoutChatsLayoutChatsSessionIdRoute,
    LayoutChatsLayoutChatsIndexRoute: LayoutChatsLayoutChatsIndexRoute,
    LayoutChatsLayoutChatsProjectsProjectIdIndexRoute:
      LayoutChatsLayoutChatsProjectsProjectIdIndexRoute,
    LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute:
      LayoutChatsLayoutChatsProjectsProjectIdSessionsSessionIdRoute,
    LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute:
      LayoutChatsLayoutChatsProjectsProjectIdSessionsIndexRoute,
  }

const LayoutChatsLayoutChatsRouteWithChildren =
  LayoutChatsLayoutChatsRoute._addFileChildren(
    LayoutChatsLayoutChatsRouteChildren,
  )

interface LayoutChatsRouteChildren {
  LayoutChatsLayoutChatsRoute: typeof LayoutChatsLayoutChatsRouteWithChildren
}

const LayoutChatsRouteChildren: LayoutChatsRouteChildren = {
  LayoutChatsLayoutChatsRoute: LayoutChatsLayoutChatsRouteWithChildren,
}

const LayoutChatsRouteWithChildren = LayoutChatsRoute._addFileChildren(
  LayoutChatsRouteChildren,
)

interface LayoutDataLayoutDatasourcesRouteChildren {
  LayoutDataLayoutDatasourcesDataSourceIdRoute: typeof LayoutDataLayoutDatasourcesDataSourceIdRoute
  LayoutDataLayoutDatasourcesIndexRoute: typeof LayoutDataLayoutDatasourcesIndexRoute
}

const LayoutDataLayoutDatasourcesRouteChildren: LayoutDataLayoutDatasourcesRouteChildren =
  {
    LayoutDataLayoutDatasourcesDataSourceIdRoute:
      LayoutDataLayoutDatasourcesDataSourceIdRoute,
    LayoutDataLayoutDatasourcesIndexRoute:
      LayoutDataLayoutDatasourcesIndexRoute,
  }

const LayoutDataLayoutDatasourcesRouteWithChildren =
  LayoutDataLayoutDatasourcesRoute._addFileChildren(
    LayoutDataLayoutDatasourcesRouteChildren,
  )

interface LayoutDataRouteChildren {
  LayoutDataLayoutDatasourcesRoute: typeof LayoutDataLayoutDatasourcesRouteWithChildren
}

const LayoutDataRouteChildren: LayoutDataRouteChildren = {
  LayoutDataLayoutDatasourcesRoute:
    LayoutDataLayoutDatasourcesRouteWithChildren,
}

const LayoutDataRouteWithChildren = LayoutDataRoute._addFileChildren(
  LayoutDataRouteChildren,
)

interface LayoutModelsLayoutModelsRouteChildren {
  LayoutModelsLayoutModelsIndexRoute: typeof LayoutModelsLayoutModelsIndexRoute
}

const LayoutModelsLayoutModelsRouteChildren: LayoutModelsLayoutModelsRouteChildren =
  {
    LayoutModelsLayoutModelsIndexRoute: LayoutModelsLayoutModelsIndexRoute,
  }

const LayoutModelsLayoutModelsRouteWithChildren =
  LayoutModelsLayoutModelsRoute._addFileChildren(
    LayoutModelsLayoutModelsRouteChildren,
  )

interface LayoutModelsRouteChildren {
  LayoutModelsLayoutModelsRoute: typeof LayoutModelsLayoutModelsRouteWithChildren
}

const LayoutModelsRouteChildren: LayoutModelsRouteChildren = {
  LayoutModelsLayoutModelsRoute: LayoutModelsLayoutModelsRouteWithChildren,
}

const LayoutModelsRouteWithChildren = LayoutModelsRoute._addFileChildren(
  LayoutModelsRouteChildren,
)

interface LayoutProjectsLayoutProjectsRouteChildren {
  LayoutProjectsLayoutProjectsProjectIdRoute: typeof LayoutProjectsLayoutProjectsProjectIdRoute
  LayoutProjectsLayoutProjectsIndexRoute: typeof LayoutProjectsLayoutProjectsIndexRoute
}

const LayoutProjectsLayoutProjectsRouteChildren: LayoutProjectsLayoutProjectsRouteChildren =
  {
    LayoutProjectsLayoutProjectsProjectIdRoute:
      LayoutProjectsLayoutProjectsProjectIdRoute,
    LayoutProjectsLayoutProjectsIndexRoute:
      LayoutProjectsLayoutProjectsIndexRoute,
  }

const LayoutProjectsLayoutProjectsRouteWithChildren =
  LayoutProjectsLayoutProjectsRoute._addFileChildren(
    LayoutProjectsLayoutProjectsRouteChildren,
  )

interface LayoutProjectsRouteChildren {
  LayoutProjectsLayoutProjectsRoute: typeof LayoutProjectsLayoutProjectsRouteWithChildren
}

const LayoutProjectsRouteChildren: LayoutProjectsRouteChildren = {
  LayoutProjectsLayoutProjectsRoute:
    LayoutProjectsLayoutProjectsRouteWithChildren,
}

const LayoutProjectsRouteWithChildren = LayoutProjectsRoute._addFileChildren(
  LayoutProjectsRouteChildren,
)

interface LayoutRouteChildren {
  LayoutAnalyticsRoute: typeof LayoutAnalyticsRouteWithChildren
  LayoutChatsRoute: typeof LayoutChatsRouteWithChildren
  LayoutDataRoute: typeof LayoutDataRouteWithChildren
  LayoutModelsRoute: typeof LayoutModelsRouteWithChildren
  LayoutProjectsRoute: typeof LayoutProjectsRouteWithChildren
  LayoutSessionsSessionIdRoute: typeof LayoutSessionsSessionIdRoute
  LayoutDocsIndexRoute: typeof LayoutDocsIndexRoute
  LayoutSessionsIndexRoute: typeof LayoutSessionsIndexRoute
  LayoutSettingsLayoutSettingsIndexRoute: typeof LayoutSettingsLayoutSettingsIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAnalyticsRoute: LayoutAnalyticsRouteWithChildren,
  LayoutChatsRoute: LayoutChatsRouteWithChildren,
  LayoutDataRoute: LayoutDataRouteWithChildren,
  LayoutModelsRoute: LayoutModelsRouteWithChildren,
  LayoutProjectsRoute: LayoutProjectsRouteWithChildren,
  LayoutSessionsSessionIdRoute: LayoutSessionsSessionIdRoute,
  LayoutDocsIndexRoute: LayoutDocsIndexRoute,
  LayoutSessionsIndexRoute: LayoutSessionsIndexRoute,
  LayoutSettingsLayoutSettingsIndexRoute:
    LayoutSettingsLayoutSettingsIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
